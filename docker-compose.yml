services:
  memcached:
    image: memcached:alpine
    ports:
      - "11211:11211"
    healthcheck:
      test: ["CMD", "nc", "-z", "memcached", "11211"]
      interval: 5s
      timeout: 3s
      retries: 5

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    command: "redis-server"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-h", "redis", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  eventbus:
    image: rabbitmq:management
    hostname: eventbus 
    container_name: eventbus 
    networks:
      default:
        aliases:
          - rabbitmq  
          - eventbus  
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest  
      RABBITMQ_DEFAULT_PASS: guest 
      RABBITMQ_DEFAULT_VHOST: /
      RABBITMQ_NODENAME: rabbit@eventbus  
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: "-proto_dist inet_tcp"
      RABBITMQ_DEFAULT_PERMISSIONS: "guest . \".*\" \".*\""

    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq


  postgres:
    image: postgres:15-alpine
    hostname: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password 
      POSTGRES_DB: eventstore
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
      POSTGRES_INITDB_ARGS: >-
        --username=username
        --pwfile=<(echo "password")
        --auth-host=scram-sha-256
        --auth-local=scram-sha-256
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck: 
      test: ["CMD-SHELL", "pg_isready -h localhost -U username -d eventstore"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    depends_on:
      postgres:
        condition: service_healthy

  featurefusion-app:
    build: .
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      eventbus:
        condition: service_healthy
      memcached:
        condition: service_healthy
    environment:
    - ASPNETCORE_ENVIRONMENT=Production  
    - MEMCACHED__SERVER=memcached:11211
    command: >
      sh -c "
        while ! nc -z postgres 5432; do sleep 1; done &&
        while ! nc -z redis 6379; do sleep 1; done &&
        while ! nc -z eventbus 5672;do sleep 1; done &&
        while ! nc -z memcached 11211; do sleep 1; done &&
        echo 'All dependencies ready' &&
        dotnet FeatureFusion.dll
      "

volumes:
  redis_data:
  postgres_data:
  rabbitmq-data:    